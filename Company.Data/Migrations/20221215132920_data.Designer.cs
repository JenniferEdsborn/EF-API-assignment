// <auto-generated />
using System;
using Company.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Company.Data.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20221215132920_data")]
    partial class data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Company.Data.Entities.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FirmID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FirmID");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DepartmentName = "Administration",
                            FirmID = 1
                        },
                        new
                        {
                            ID = 2,
                            DepartmentName = "Marketing",
                            FirmID = 1
                        },
                        new
                        {
                            ID = 3,
                            DepartmentName = "HR",
                            FirmID = 1
                        },
                        new
                        {
                            ID = 4,
                            DepartmentName = "Customer Service",
                            FirmID = 1
                        },
                        new
                        {
                            ID = 5,
                            DepartmentName = "IT",
                            FirmID = 1
                        },
                        new
                        {
                            ID = 6,
                            DepartmentName = "Finance",
                            FirmID = 1
                        },
                        new
                        {
                            ID = 7,
                            DepartmentName = "Production",
                            FirmID = 1
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Salary")
                        .HasColumnType("int");

                    b.Property<bool?>("UnionMember")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DepartmentID = 5,
                            FirstName = "Frodo",
                            LastName = "Baggins",
                            Salary = 35000,
                            UnionMember = true
                        },
                        new
                        {
                            ID = 2,
                            DepartmentID = 5,
                            FirstName = "Rhaynera",
                            LastName = "Targaryen",
                            Salary = 35000,
                            UnionMember = true
                        },
                        new
                        {
                            ID = 3,
                            DepartmentID = 5,
                            FirstName = "Rick",
                            LastName = "Astley",
                            Salary = 32700,
                            UnionMember = false
                        },
                        new
                        {
                            ID = 4,
                            DepartmentID = 2,
                            FirstName = "Optimus",
                            LastName = "Prime",
                            Salary = 44000,
                            UnionMember = false
                        },
                        new
                        {
                            ID = 5,
                            DepartmentID = 1,
                            FirstName = "Norman",
                            LastName = "Bates",
                            Salary = 40000,
                            UnionMember = true
                        },
                        new
                        {
                            ID = 6,
                            DepartmentID = 4,
                            FirstName = "Wednesday",
                            LastName = "Addams",
                            Salary = 38850,
                            UnionMember = false
                        },
                        new
                        {
                            ID = 7,
                            DepartmentID = 4,
                            FirstName = "Inigo",
                            LastName = "Montoya",
                            Salary = 46000,
                            UnionMember = true
                        },
                        new
                        {
                            ID = 8,
                            DepartmentID = 5,
                            FirstName = "Han",
                            LastName = "Solo",
                            Salary = 40000,
                            UnionMember = true
                        },
                        new
                        {
                            ID = 9,
                            DepartmentID = 3,
                            FirstName = "Ellen",
                            LastName = "Ripley",
                            Salary = 37500,
                            UnionMember = true
                        },
                        new
                        {
                            ID = 10,
                            DepartmentID = 7,
                            FirstName = "Tyler",
                            LastName = "Durden",
                            Salary = 34100,
                            UnionMember = true
                        },
                        new
                        {
                            ID = 11,
                            DepartmentID = 1,
                            FirstName = "Michael",
                            LastName = "Corleone",
                            Salary = 44000,
                            UnionMember = false
                        },
                        new
                        {
                            ID = 12,
                            DepartmentID = 1,
                            FirstName = "Riley",
                            LastName = "Show",
                            Salary = 45000,
                            UnionMember = false
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.EmployeePosition", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID", "PositionID");

                    b.HasIndex("PositionID");

                    b.ToTable("EmployeePositions");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            PositionID = 2
                        },
                        new
                        {
                            EmployeeID = 2,
                            PositionID = 1
                        },
                        new
                        {
                            EmployeeID = 3,
                            PositionID = 1
                        },
                        new
                        {
                            EmployeeID = 4,
                            PositionID = 2
                        },
                        new
                        {
                            EmployeeID = 5,
                            PositionID = 2
                        },
                        new
                        {
                            EmployeeID = 6,
                            PositionID = 3
                        },
                        new
                        {
                            EmployeeID = 7,
                            PositionID = 6
                        },
                        new
                        {
                            EmployeeID = 8,
                            PositionID = 1
                        },
                        new
                        {
                            EmployeeID = 8,
                            PositionID = 2
                        },
                        new
                        {
                            EmployeeID = 9,
                            PositionID = 2
                        },
                        new
                        {
                            EmployeeID = 10,
                            PositionID = 7
                        },
                        new
                        {
                            EmployeeID = 11,
                            PositionID = 5
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.Firm", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("FirmName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OrganizationNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Firms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirmName = "Swedish AB",
                            OrganizationNumber = 123456789
                        },
                        new
                        {
                            ID = 2,
                            FirmName = "Norweigan AB",
                            OrganizationNumber = 987654321
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            PositionName = "Software Developer"
                        },
                        new
                        {
                            ID = 2,
                            PositionName = "Manager"
                        },
                        new
                        {
                            ID = 3,
                            PositionName = "Adminstrator"
                        },
                        new
                        {
                            ID = 4,
                            PositionName = "HR Manager"
                        },
                        new
                        {
                            ID = 5,
                            PositionName = "Budget Analyst"
                        },
                        new
                        {
                            ID = 6,
                            PositionName = "Technical Support Engineer"
                        },
                        new
                        {
                            ID = 7,
                            PositionName = "Paralegal"
                        });
                });

            modelBuilder.Entity("EmployeePosition", b =>
                {
                    b.Property<int>("EmployeesID")
                        .HasColumnType("int");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.HasKey("EmployeesID", "PositionID");

                    b.HasIndex("PositionID");

                    b.ToTable("EmployeePosition");
                });

            modelBuilder.Entity("Company.Data.Entities.Department", b =>
                {
                    b.HasOne("Company.Data.Entities.Firm", "Firm")
                        .WithMany("Departments")
                        .HasForeignKey("FirmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firm");
                });

            modelBuilder.Entity("Company.Data.Entities.Employee", b =>
                {
                    b.HasOne("Company.Data.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Company.Data.Entities.EmployeePosition", b =>
                {
                    b.HasOne("Company.Data.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company.Data.Entities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("EmployeePosition", b =>
                {
                    b.HasOne("Company.Data.Entities.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company.Data.Entities.Position", null)
                        .WithMany()
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Company.Data.Entities.Firm", b =>
                {
                    b.Navigation("Departments");
                });
#pragma warning restore 612, 618
        }
    }
}
